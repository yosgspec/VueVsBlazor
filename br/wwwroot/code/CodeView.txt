<div id=codeView>
	@foreach(var c in codes){<div>
		<h3>@c.name</h3>
		<pre><code class=@(
			(fileType(c.name)=="razor"? "language-aspnet": "")+
			(fileType(c.name)=="cs"? "language-cs": "")
		)>@c.code</code></pre>
	</div>}
</div>

<style>
#codeView div{
	border: 1px double #999;
	margin: 10px 0;
	padding: 5px;
}
#codeView code{
	color: #0000FF;
	font-family: "M+ 1mn";
	line-height: 1em;
	tab-size: 4;
	-moz-tab-size: 4;
	cursor: text;
	overflow-y: hidden;
}
</style>

@inject IJSRuntime js;
@inject NavigationManager nav;
@inject HttpClient http;
@inject AppState state;

@code{
	Dictionary<string,List<string>> pageList;
	Code[] codes={};
	class Code{
		public string name;
		public string code;
	}

	string fileType(string file){
		return (new LinkedList<string>(file.Split('.'))).Last.Value;
	}

	async Task moveURL(){
		var key=nav.ToBaseRelativePath(nav.Uri);
		codes=new Code[]{};
		StateHasChanged();
		codes=await Task.WhenAll(pageList[key].ConvertAll(async v=>new Code{
			name=v=="$store"? "AppStore.cs": v+".razor",
			code=await http.GetStringAsync($"./code/{v}.txt?0")
		}));
		StateHasChanged();
	}
	async void moveURL(object sender,LocationChangedEventArgs e){await moveURL();}

	protected override async Task OnAfterRenderAsync(bool firstRender){
		if(firstRender){
			pageList=await http.GetJsonAsync<Dictionary<string,List<string>>>("./Assets/pageList.json?0");
			await moveURL();
			nav.LocationChanged+=moveURL;
		}
		await js.InvokeVoidAsync("Prism.highlightAll");
	}
}
